@model IEnumerable<BookViewModelWithId>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="display: flex; justify-content: space-between; align-items: center;">
    <h1>Book Catalogue</h1>
</div>

<table class="table pt-4">
    <thead>
        <tr>
            <th></th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">@Html.DisplayNameFor(model => model.Title)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">@Html.DisplayNameFor(model => model.Author)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.PublicationYear)</a>
            </th>
            <th>
                @if (User.IsInRole(Roles.Librarian) || User.IsInRole(Roles.Administrator))
                {
                    <a asp-action="Create" class="btn btn-info px-0 mb-2" style="width: 100px">Add New</a>
                }
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @if (!string.IsNullOrEmpty(item.CoverImageURL))
                    {
                        <img src="@item.CoverImageURL" style="max-height: 50px; width: auto" alt="Cover Image" loading="lazy" />
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublicationYear)
            </td>
            <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary px-0" style="width: 100px">View</a>
            </td>
        </tr>
}
    </tbody>
</table>
